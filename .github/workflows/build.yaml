name: Matter Linux OTA Provider build

on: push

jobs:
  build_prepare:
    name: Prepare build
    runs-on: ubuntu-22.04
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout build repository
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0
      - name: Get version
        id: version
        shell: bash
        run: |
          version=$(echo "${{ github.ref }}" | awk -F"/" '{print $NF}')
          if [[ ! -z "${{ github.event.inputs.version }}" ]]; then
            version="${{ github.event.inputs.version }}"
          elif [[ "${version}" =~ (main|dev) ]]; then
            today="$(date --utc '+%Y-%m-%d')"
            midnight_timestamp="$(date --utc +%s --date=$today)"
            calver_date="$(date --utc --date=$today '+%Y.%-m.dev%-d')"
            commit_count="$(git rev-list --count --since=$midnight_timestamp HEAD)"
            commit_count="$(printf "%02d" ${commit_count})"
            version="${calver_date}${commit_count}"
          fi
          echo "Building version $version"
          echo "version=$version" >> "$GITHUB_OUTPUT"

  build_linux_examples:
    name: Build example apps for Linux (${{ matrix.arch.name }})
    needs: build_prepare
    strategy:
      matrix:
        arch:
          - name: x86-64
            container: ghcr.io/project-chip/chip-build:42
            runner: ubuntu-22.04
            example-prefix: linux-x64-
          - name: armv7
            container: arm32v7/debian:bullseye
            runner: ubuntu-22.04
            example-prefix: linux-armv7-
    runs-on: ${{ matrix.arch.runner }}
    permissions:
      contents: write # for actions/upload-release-asset to upload release asset

    defaults:
      run:
        working-directory: ./connectedhomeip/

    steps:
      - name: Set up QEMU for ARMv7
        if: ${{ matrix.arch.name == 'armv7' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

      - name: Restore Matter SDK from artifacts
        uses: actions/download-artifact@v4
        with:
          name: matter-sdk-${{ github.run_id }}

      - name: Extract Matter SDK from tar
        working-directory: ./
        run: |
          apt update && apt install zstd
          rm -rf connectedhomeip/
          tar -xaf ./connectedhomeip.tar.zst --use-compress-program=zstdmt .
          git config --global --add safe.directory "*"

      - name: Bootstrap
        run: bash scripts/bootstrap.sh -p all,linux

      - name: Setup and run build
        run: |
          mkdir bin/
          ./scripts/examples/gn_build_example.sh \
              examples/ota-provider-app/linux/ \
              out/ \
              chip_config_network_layer_ble=false \
              chip_enable_wifi=false \
              chip_enable_openthread=false \
              chip_minmdns_default_policy=\"libnl\" \
              chip_crypto=\"boringssl\" \
              chip_project_config_include_dirs=\[\"//../../../..\"\]
          cp out/chip-ota-provider-app bin/

      - name: Rename and strip symbols
        run: |
          for example in bin/*; do
              mv "${example}" "${example}-${{ matrix.arch.name }}"
          done
          for example in bin/*; do
              objcopy --only-keep-debug "${example}" "${example}.debug"
              strip --strip-debug "${example}"
              objcopy --add-gnu-debuglink="${example}.debug" "${example}"
          done

      - name: Upload binaries as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: chip-linux-example-apps-${{ matrix.arch.name }}
          path: |
            ./connectedhomeip/bin/
            !./connectedhomeip/bin/*.debug

      - name: Upload debug symbols as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: chip-linux-example-apps-debug-${{ matrix.arch.name }}
          path: |
            ./connectedhomeip/bin/*.debug

      - name: Upload binaries as release assets
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ./connectedhomeip/bin/*
